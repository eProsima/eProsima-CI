name: colcon_build
description: Use colcon build command to build multiple packages

inputs:

  colcon_meta_file:
    description: colcon.meta file to set cmake options. If empty, it uses an empty file
    required: false
    default: ''

  colcon_build_args:
    description: Arguments to pass to colcon build command (use cmake_args input for CMake options)
    required: false
    default: ''

  colcon_build_args_default:
    description: Default arguments to pass to colcon build command (use cmake_args input for CMake options)
    required: false
    default: '--event-handlers=console_direct+'

  cmake_args:
    description: 'CMake arguments'
    required: false
    default: ''

  cmake_args_default:
    description: Default CMake arguments
    required: false
    default: '-DCMAKE_CXX_FLAGS="-Werror -Wall"'

  cmake_build_type:
    description: Set the cmake build type
    required: false
    default: Release

  workspace:
    description: Workspace to build
    required: false
    default: ${{ github.workspace }}

  workspace_dependencies:
    description: Workspace to source where dependencies are
    required: false
    default: ''

runs:
  using: composite
  steps:

    - name: Build workspace with colcon
      run: |

        # Use sudo only if available
        if command -v sudo > /dev/null 2>&1; then
          command_prefix='sudo'
        else
          command_prefix=''
        fi
        
        # https://github.com/actions/runner-images/issues/9491
        if [[ ${RUNNER_OS} == "Linux" ]]
        then
          $command_prefix sysctl vm.mmap_rnd_bits=28
        fi

        echo "::group::Compile using colcon ${{ inputs.workspace }}"

        if [[ ! -z "${{ inputs.workspace_dependencies }}" ]]; then
          source ${{ inputs.workspace_dependencies }}/setup.bash
        fi

        cd ${{ inputs.workspace }}

        if [[ -z "${{ inputs.colcon_meta_file }}" ]]; then
          touch colcon.meta
          export COLCON_BUILD_META_="colcon.meta"
        else
          export COLCON_BUILD_META_="${{ inputs.colcon_meta_file }}"
        fi

        colcon build \
          --metas ${COLCON_BUILD_META_} \
          ${{ inputs.colcon_build_args_default }} \
          ${{ inputs.colcon_build_args }} \
          --cmake-args \
            -DCMAKE_BUILD_TYPE=${{ inputs.cmake_build_type }} \
            ${{ inputs.cmake_args_default }} \
            ${{ inputs.cmake_args }}

        if [[ -z "${{ inputs.colcon_meta_file }}" ]]; then
          rm colcon.meta
        fi

        echo "::endgroup::"

      shell: bash
