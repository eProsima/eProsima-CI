name: colcon_build
description: Use colcon build command to build multiple packages

inputs:

  colcon_meta_file:
    description: colcon.meta file to set cmake options. If empty, it uses an empty file
    required: false
    default: ''

  colcon_build_args:
    description: Arguments to pass to colcon build command (use cmake_args input for CMake options)
    required: false
    default: ''

  colcon_build_args_default:
    description: Default arguments to pass to colcon build command (use cmake_args input for CMake options)
    required: false
    default: '--event-handlers=console_direct+'

  cmake_args:
    description: CMake arguments
    required: false
    default: ''

  cmake_args_default:
    description: Default CMake arguments
    required: false
    default: ''

  cmake_build_type:
    description: Set the cmake build type
    required: false
    default: Release

  workspace:
    description: Workspace to build
    required: false
    default: '${{ github.workspace }}'

  workspace_dependencies:
    description: Workspace to source where dependencies are
    required: false
    default: ''

runs:
  using: composite
  steps:

    - name: Run in ubuntu or macOS
      uses: eProsima/eProsima-CI/ubuntu/colcon_build@v0
      if: runner.os == 'Linux' || runner.os == 'macOS'
      with:
        colcon_meta_file: ${{ inputs.colcon_meta_file }}
        colcon_build_args: ${{ inputs.colcon_build_args }}
        colcon_build_args_default: ${{ inputs.colcon_build_args_default }}
        cmake_args: ${{ inputs.cmake_args }}
        cmake_args_default: ${{ inputs.cmake_args_default }}
        workspace: ${{ inputs.workspace }}
        workspace_dependencies: ${{ inputs.workspace_dependencies }}
        cmake_build_type: ${{ inputs.cmake_build_type }}

    - name: Run in windows
      uses: eProsima/eProsima-CI/windows/colcon_build@v0
      if: runner.os == 'Windows'
      with:
        colcon_meta_file: ${{ inputs.colcon_meta_file }}
        colcon_build_args: ${{ inputs.colcon_build_args }}
        colcon_build_args_default: ${{ inputs.colcon_build_args_default }}
        cmake_args: ${{ inputs.cmake_args }}
        # TODO (jparisu) find a way to use it for windows, as there is not a common Werror flag for both
        cmake_args_default: ${{ inputs.cmake_args_default }}
        workspace: ${{ inputs.workspace }}
        workspace_dependencies: ${{ inputs.workspace_dependencies }}
        cmake_build_type: ${{ inputs.cmake_build_type }}
